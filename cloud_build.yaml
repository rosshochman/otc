steps:
# Build Docker image: docker build -f Dockerfile -t gcr.io/scarlet-labs/otc:latest .
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/scarlet-labs/otc:latest', '-f', 'Dockerfile', '.']

# Push to GCR: gcloud docker -- push gcr.io/scarlet-labs/otc:latest
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/scarlet-labs/otc:latest']

# Give GCE permission to run docker
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'ssh', '$_SERVER', '--zone', '$_ZONE', '--command', 'sudo chmod 666 /var/run/docker.sock']

# Connect to GCE server and pull new image
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'ssh', '$_SERVER', '--zone', '$_ZONE', '--command', 'docker -- pull gcr.io/scarlet-labs/otc:latest']

# Connect to server and stop current container
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'ssh', '$_SERVER', '--zone', '$_ZONE',  '--command', 'docker stop otc']

# Connect to server and stop current container
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'ssh', '$_SERVER', '--zone', '$_ZONE',  '--command', 'docker rm otc']

  # Connect to server and start new container
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['compute', 'ssh', '$_SERVER', '--zone', '$_ZONE',  '--command', 'docker run  --restart always --name otc -d -p 443:443  --log-driver=gcplogs  gcr.io/scarlet-labs/otc:latest']


substitutions:
  _SERVER: 'otc'
  _ZONE: 'us-central1-a'
